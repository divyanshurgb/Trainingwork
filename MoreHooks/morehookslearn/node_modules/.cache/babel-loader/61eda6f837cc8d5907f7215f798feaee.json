{"ast":null,"code":"//// UseMemo\n// import React, { useState } from 'react'\n// export default function App() {\n//   const [number, setNumber] = useState(0)\n//   const [dark, setDark] = useState(false)\n//   const doubleNumber = slowFunction(number)\n//   const themeStyles = {\n//     backgroundColor: dark ? 'black' : 'white',\n//     color: dark ? 'white' : 'black'\n//   }\n//   return (\n//     <>\n//     <input type = \"number\" value = {number} onChange = {e => setNumber(parseInt(e.target.value))} />\n//     <button onClick = {() => setDark(prevDark => !prevDark)}>Change Theme</button>\n//     <div style = {themeStyles}>{doubleNumber}</div>\n//     </>\n//   )\n// }\n// function slowFunction(num) {\n//   console.log('Calling slow function')\n//   for(let i = 0; i <= 1000000000; i++) {\n//     return num * 2\n//   }\n// }\n//// UseRef\n// import React, { useEffect, useState, useRef } from 'react'\n// export default function App() {\n//   const [name, setName] = useState('')\n//   const renderCount= useRef(1)\n//   useEffect(() => {\n//     prevName.current = name\n//   }, [name])\n//   function focus() {\n//     inputRef.current.focus()\n//     inputRef.current.value = 'Some value'\n//     appendChild\n//   }\n//   return (\n//     <>\n//     <input ref = {inputRef} value={name} onChange={e => setName(e.target.value)}/>\n//     <div>My name is {name}</div>\n//     <button onClick={focus}>Focus</button>\n//     </>\n//   )\n// }\n// useContext","map":{"version":3,"sources":["C:/Users/DIVI/Desktop/Trainingwork/MoreHooks/morehookslearn/src/App.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["//// UseMemo\r\n// import React, { useState } from 'react'\r\n\r\n// export default function App() {\r\n//   const [number, setNumber] = useState(0)\r\n//   const [dark, setDark] = useState(false)\r\n//   const doubleNumber = slowFunction(number)\r\n//   const themeStyles = {\r\n//     backgroundColor: dark ? 'black' : 'white',\r\n//     color: dark ? 'white' : 'black'\r\n//   }\r\n\r\n//   return (\r\n//     <>\r\n//     <input type = \"number\" value = {number} onChange = {e => setNumber(parseInt(e.target.value))} />\r\n//     <button onClick = {() => setDark(prevDark => !prevDark)}>Change Theme</button>\r\n//     <div style = {themeStyles}>{doubleNumber}</div>\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// function slowFunction(num) {\r\n//   console.log('Calling slow function')\r\n//   for(let i = 0; i <= 1000000000; i++) {\r\n//     return num * 2\r\n//   }\r\n// }\r\n\r\n//// UseRef\r\n// import React, { useEffect, useState, useRef } from 'react'\r\n\r\n// export default function App() {\r\n//   const [name, setName] = useState('')\r\n//   const renderCount= useRef(1)\r\n  \r\n//   useEffect(() => {\r\n//     prevName.current = name\r\n//   }, [name])\r\n\r\n//   function focus() {\r\n//     inputRef.current.focus()\r\n//     inputRef.current.value = 'Some value'\r\n//     appendChild\r\n//   }\r\n  \r\n//   return (\r\n//     <>\r\n//     <input ref = {inputRef} value={name} onChange={e => setName(e.target.value)}/>\r\n//     <div>My name is {name}</div>\r\n//     <button onClick={focus}>Focus</button>\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// useContext\r\n"]},"metadata":{},"sourceType":"module"}