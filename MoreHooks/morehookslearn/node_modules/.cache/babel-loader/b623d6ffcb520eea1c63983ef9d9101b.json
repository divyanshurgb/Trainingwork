{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DIVI\\\\Desktop\\\\Trainingwork\\\\MoreHooks\\\\morehookslearn\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n//// UseMemo\n// import React, { useState } from 'react'\n// export default function App() {\n//   const [number, setNumber] = useState(0)\n//   const [dark, setDark] = useState(false)\n//   const doubleNumber = slowFunction(number)\n//   const themeStyles = {\n//     backgroundColor: dark ? 'black' : 'white',\n//     color: dark ? 'white' : 'black'\n//   }\n//   return (\n//     <>\n//     <input type = \"number\" value = {number} onChange = {e => setNumber(parseInt(e.target.value))} />\n//     <button onClick = {() => setDark(prevDark => !prevDark)}>Change Theme</button>\n//     <div style = {themeStyles}>{doubleNumber}</div>\n//     </>\n//   )\n// }\n// function slowFunction(num) {\n//   console.log('Calling slow function')\n//   for(let i = 0; i <= 1000000000; i++) {\n//     return num * 2\n//   }\n// }\n//// UseRef\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [renderCount, setRenderCount] = useState(0);\n  useEffect(() => {\n    setRenderCount(prevRenderCount => prevRenderCount + 1);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"My name is \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"I rendered \", renderCount.current, \" times \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"R0l8HWXog8tpgIJDVAJIOztomLI=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/DIVI/Desktop/Trainingwork/MoreHooks/morehookslearn/src/App.js"],"names":["React","useEffect","useState","App","name","setName","renderCount","setRenderCount","prevRenderCount","e","target","value","current"],"mappings":";;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,CAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,cAAc,CAACC,eAAe,IAAIA,eAAe,GAAG,CAAtC,CAAd;AACD,GAFQ,CAAT;AAIA,sBACE;AAAA,4BACA;AAAO,MAAA,KAAK,EAAEJ,IAAd;AAAoB,MAAA,QAAQ,EAAEK,CAAC,IAAIJ,OAAO,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV;AAA1C;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,gCAAiBP,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAA,gCAAiBE,WAAW,CAACM,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA,kBADF;AAOD;;GAfuBT,G;;KAAAA,G","sourcesContent":["//// UseMemo\r\n// import React, { useState } from 'react'\r\n\r\n// export default function App() {\r\n//   const [number, setNumber] = useState(0)\r\n//   const [dark, setDark] = useState(false)\r\n//   const doubleNumber = slowFunction(number)\r\n//   const themeStyles = {\r\n//     backgroundColor: dark ? 'black' : 'white',\r\n//     color: dark ? 'white' : 'black'\r\n//   }\r\n\r\n//   return (\r\n//     <>\r\n//     <input type = \"number\" value = {number} onChange = {e => setNumber(parseInt(e.target.value))} />\r\n//     <button onClick = {() => setDark(prevDark => !prevDark)}>Change Theme</button>\r\n//     <div style = {themeStyles}>{doubleNumber}</div>\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// function slowFunction(num) {\r\n//   console.log('Calling slow function')\r\n//   for(let i = 0; i <= 1000000000; i++) {\r\n//     return num * 2\r\n//   }\r\n// }\r\n\r\n//// UseRef\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nexport default function App() {\r\n  const [name, setName] = useState('')\r\n  const [renderCount, setRenderCount] = useState(0)\r\n\r\n  useEffect(() => {\r\n    setRenderCount(prevRenderCount => prevRenderCount + 1) \r\n  })\r\n  \r\n  return (\r\n    <>\r\n    <input value={name} onChange={e => setName(e.target.value)}/>\r\n    <div>My name is {name}</div>\r\n    <div>I rendered {renderCount.current} times </div>\r\n    </>\r\n  )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}